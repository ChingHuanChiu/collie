[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "collie-mlops"
version = "0.1.0-beta"
description = "A Lightweight MLOps Framework for Machine Learning Workflows"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "ChingHuanChiu", email = "stevenchiou8@gmail.com"}
]
maintainers = [
    {name = "ChingHuanChiu", email = "stevenchiou8@gmail.com"}
]
keywords = [
    "mlops",
    "machine-learning",
    "mlflow",
    "pipeline",
    "orchestration",
    "deep-learning",
    "experiment-tracking"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed"
]

# Core dependencies - includes all ML frameworks
dependencies = [
    "mlflow>=2.0.0",
    "pydantic>=2.0.0",
    "pandas>=1.3.0",
    "numpy>=1.20.0",
    "scikit-learn>=1.0.0",
    "xgboost>=1.5.0",
    "torch>=1.9.0",
    "pytorch-lightning>=2.0.0",
    "lightgbm>=3.0.0",
    "transformers>=4.0.0",
    "sentence-transformers>=2.0.0",
]

[project.optional-dependencies]
# ML Framework support - install specific frameworks as needed
sklearn = ["scikit-learn>=1.0.0"]
xgboost = ["xgboost>=1.5.0"]
pytorch = [
    "torch>=1.9.0",
    "pytorch-lightning>=2.0.0"
]
lightgbm = ["lightgbm>=3.0.0"]
transformers = [
    "transformers>=4.0.0",
    "sentence-transformers>=2.0.0"
]

# All ML frameworks
all = [
    "scikit-learn>=1.0.0",
    "xgboost>=1.5.0",
    "torch>=1.9.0",
    "pytorch-lightning>=2.0.0",
    "lightgbm>=3.0.0",
    "transformers>=4.0.0",
    "sentence-transformers>=2.0.0"
]

[project.urls]
Homepage = "https://github.com/ChingHuanChiu/collie"
Documentation = "https://github.com/ChingHuanChiu/collie/blob/main/README.md"
Repository = "https://github.com/ChingHuanChiu/collie"
"Bug Tracker" = "https://github.com/ChingHuanChiu/collie/issues"
Changelog = "https://github.com/ChingHuanChiu/collie/blob/main/CHANGELOG.md"

# Future CLI support (when implemented)
# [project.scripts]
# collie = "collie.cli:main"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["collie*"]
exclude = ["tests*", "example*", "deploy*", "docs*", "*.tests", "*.tests.*"]

[tool.setuptools.package-data]
collie = ["py.typed"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*/setup.py", "*/__pycache__/*", "*/build/*", "*/dist/*"]

# mypy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "mlflow.*",
    "pandas.*",
    "sklearn.*",
    "xgboost.*",
    "lightgbm.*",
    "transformers.*",
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*", "*Tests"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--color=yes",
    "--durations=10",
    "--maxfail=3",
    "--cov=collie",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
markers = [
    "integration: Integration tests",
    "unit: Unit tests",
    "slow: Slow running tests",
    "requires_mlflow: Tests that require MLflow server"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

# Coverage configuration
[tool.coverage.run]
source = ["collie"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
precision = 2
show_missing = true

[tool.coverage.html]
directory = "htmlcov"
